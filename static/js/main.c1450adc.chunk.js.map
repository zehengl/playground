{"version":3,"sources":["Components/Header.js","Components/ColorApp.js","Components/Home.js","Components/NumberApp.js","Components/ShapeApp.js","Components/Route.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Helmet","charset","name","content","rel","href","defer","src","Component","ColorApp","colors","black","blue","brown","green","orange","pink","purple","red","white","yellow","_this2","this","names","Object","keys","sort","Math","random","react_fullpage_default","loopBottom","loopTop","sectionsColor","map","render","Wrapper","className","Home","NumberApp","toConsumableArray","Array","number","ShapeApp","getRadius","radiusMax","window","innerWidth","radiusMin","handleDragStart","e","target","moveToTop","setAttrs","scaleX","scaleY","handleDragEnd","to","duration","easing","Konva","Easings","BounceEaseOut","commonProps","draggable","x","y","innerHeight","fill","Util","getRandomColor","shadowBlur","shadowOpacity","onDragStart","_this","onDragEnd","radius","ReactKonva","width","height","reverse","numSlides","assign","sides","activeStyle","cursor","opacity","textDecoration","pointerEvents","Routes","BrowserRouter","basename","process","role","aria-label","NavLink","Route","exact","path","component","App","Components_Header","Components_Route","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c1450adc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Helmet } from \"react-helmet\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <Helmet>\n        <meta charset=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <title>Playground</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.2/css/bulma.min.css\"\n        />\n        <script\n          defer\n          src=\"https://use.fontawesome.com/releases/v5.3.1/js/all.js\"\n        />\n      </Helmet>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n\nclass ColorApp extends Component {\n  colors = {\n    black: \"#000000\",\n    blue: \"#19B5FE\",\n    brown: \"#8B4513\",\n    green: \"#00E640\",\n    orange: \"#F89406\",\n    pink: \"#FF69B4\",\n    purple: \"#8C14FC\",\n    red: \"#FF0800\",\n    white: \"#FFFFFF\",\n    yellow: \"#FFFF7E\"\n  };\n\n  render() {\n    const names = Object.keys(this.colors).sort(() => 0.5 - Math.random());\n\n    return (\n      <ReactFullpage\n        loopBottom\n        loopTop\n        sectionsColor={names.map(name => this.colors[name])}\n        render={() => {\n          return (\n            <ReactFullpage.Wrapper>\n              {names.map(name => (\n                <div className=\"section has-text-centered has-text-weight-bold is-size-1\">\n                  {name}\n                </div>\n              ))}\n            </ReactFullpage.Wrapper>\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport default ColorApp;\n","import React, { Component } from \"react\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"has-text-centered has-text-weight-bold is-size-1\">\n        <h1>for ada</h1>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nimport ReactFullpage from \"@fullpage/react-fullpage\";\n\nclass NumberApp extends Component {\n  render() {\n    return (\n      <ReactFullpage\n        loopBottom\n        loopTop\n        render={() => {\n          return (\n            <ReactFullpage.Wrapper>\n              {[...Array(10).keys()].map(number => (\n                <div className=\"section has-text-centered has-text-weight-bold is-size-1\">\n                  {number + 1}\n                </div>\n              ))}\n            </ReactFullpage.Wrapper>\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport default NumberApp;\n","import { Layer, RegularPolygon, Stage } from \"react-konva\";\nimport React, { Component } from \"react\";\n\nimport Konva from \"konva\";\n\nclass ShapeApp extends Component {\n  getRadius = () => {\n    let radiusMax = window.innerWidth * 0.06;\n    let radiusMin = window.innerWidth * 0.04;\n    return Math.random() * (radiusMax - radiusMin) + radiusMin;\n  };\n\n  handleDragStart = e => {\n    e.target.moveToTop();\n    e.target.setAttrs({\n      scaleX: 2,\n      scaleY: 2\n    });\n  };\n\n  handleDragEnd = e => {\n    e.target.to({\n      duration: 0.5,\n      easing: Konva.Easings.BounceEaseOut,\n      scaleX: 1,\n      scaleY: 1\n    });\n  };\n\n  commonProps = {\n    draggable: true,\n    x: window.innerWidth / 2,\n    y: window.innerHeight / 2,\n    fill: Konva.Util.getRandomColor(),\n    shadowBlur: 20,\n    shadowOpacity: 0.7,\n    onDragStart: this.handleDragStart,\n    onDragEnd: this.handleDragEnd,\n    radius: this.getRadius()\n  };\n\n  render() {\n    return (\n      <Stage width={window.innerWidth} height={window.innerHeight}>\n        <Layer>\n          {[3, 4, 5, 6, 7, 8, 360].reverse().map(numSlides => (\n            <RegularPolygon {...this.commonProps} sides={numSlides} />\n          ))}\n        </Layer>\n      </Stage>\n    );\n  }\n}\nexport default ShapeApp;\n","import { NavLink, Route, BrowserRouter as Router } from \"react-router-dom\";\n\nimport ColorApp from \"./ColorApp\";\nimport Home from \"./Home\";\nimport NumberApp from \"./NumberApp\";\nimport React from \"react\";\nimport ShapeApp from \"./ShapeApp\";\n\nconst activeStyle = {\n  cursor: \"not-allowed\",\n  opacity: 0.2,\n  textDecoration: \"none\",\n  pointerEvents: \"none\"\n};\n\nconst Routes = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <div>\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <NavLink to=\"/\" className=\"navbar-item\">\n          Playground\n        </NavLink>\n        <NavLink to=\"/number\" className=\"navbar-item\" activeStyle={activeStyle}>\n          Number\n        </NavLink>\n        <NavLink to=\"/shape\" className=\"navbar-item\" activeStyle={activeStyle}>\n          Shape\n        </NavLink>\n        <NavLink to=\"/color\" className=\"navbar-item\" activeStyle={activeStyle}>\n          Color\n        </NavLink>\n      </nav>\n\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/number\" component={NumberApp} />\n      <Route path=\"/shape\" component={ShapeApp} />\n      <Route path=\"/color\" component={ColorApp} />\n    </div>\n  </Router>\n);\n\nexport default Routes;\n","import React, { Component } from \"react\";\n\nimport Header from \"./Components/Header\";\nimport Routes from \"./Components/Route\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}